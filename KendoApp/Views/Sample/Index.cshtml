
@{
    /**/
   ViewBag.Title = "Index";
}




<h3>MultiSelect</h3>

<h4>Pharmacies:</h4>



@(Html.Kendo().DropDownList()
                       .Name("pharmacy")
                       .Events(c => c.Select("onselect"))
                       .HtmlAttributes(new { style = "width:30%" })
                       .OptionLabel("Select Pharmacy...")
                       .DataTextField("Pharmacy_Name")//value
                       .DataValueField("Pharmacy_id")
                       .DataSource(source =>
                         {
                           source.Read(read =>
                           {
                             read.Action("GetPharmacyList", "Data");//action method & Controller
                            });
                       })
)

<h4 style="margin-top: 2em;">Facilities:</h4>
@(Html.Kendo().MultiSelect()
                           .Name("required")
                           .HtmlAttributes(new { style = "width:30%" })
                           .DataTextField("Facility_Name")
                           .DataValueField("Facility_ID")
                           .Placeholder("Select Facilities...")
                           //.Events(e => e.Select("onSelectFacilityValue"))
                           .Events(e=>e.Change("onChange"))
                           .ItemTemplate("<input type='checkbox' class='cbk' value='#:data.Facility_ID#'/> #:data.Facility_Name#")
                           .HeaderTemplate( "<div><input type='checkbox' id='Header'><label> Select All</label></div>")
                          
   
    )

@*@(Html.Kendo().DropDownList()
                    .Events(e => e.Select("onSelectFacilityValue"))
                          .Name("required")
                          .DataTextField("Facility_Name")
                          .DataValueField("Facility_ID")
                         // .Placeholder("Select Facilities...")
                          .AutoBind(false)
                     .Template("<input type='checkbox' name='cb' value='#:data.Facility_Name#' /> #:data.Facility_Name#")
                     .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetFacilityList", "Sample");//action method & Controller
        });
    })

)*@

<script>
    $(document).ready(function () {
        

       
    });
</script>


<script>
      function onselect(e) {
        var dataItem = this.dataItem(e.item.index() + 1);
          var PharmacyId = dataItem.Pharmacy_id;

        alert(PharmacyId)
        $.ajax({
            url: '/Sample/GetFacilityList',
            type: 'POST',
            dataType: 'json',
            data: { PharmacyId: PharmacyId },
            success: function (result) {
                var data1 =JSON.stringify(result);
                var val = $("#required").data("kendoMultiSelect");
                val.setDataSource(result);
                console.log(result);
                console.log(data1);
                     
              
                ////var data = [
                ////    { text: "Disabled", value: "1", unselectableItem: true },
                ////    { text: "Enabled", value: "2", unselectableItem: false }
                ////];

                $("#ddlselect").kendoMultiSelect({
                    dataTextField: "Facility_Name",
                    dataValueField: "Facility_ID",
                    dataSource: result,
                    //,
                    select: onMulitiSelect,
                    // Set a template to visually distinguish disabled items for the user.
                    template: kendo.template($("#template").html())
                });
                  
            },
            error: function () {
                alert('error');
            }
        });

    }
    function onMulitiSelect(e) {
        if (e.dataItem.Facility_status) {
            //prevent selection by cancelling the event
            e.preventDefault();           
            this.setOptions({ autoClose: false });
        }
        else {
            this.setOptions({ autoClose: true });
        }
    };
        function onSelectFacilityValue(e) {
            var dataItem = this.dataItem(e.item.index());
            var facilityId = dataItem.Facility_ID;
              
            alert(facilityId)
            $.ajax({
                url: '/Sample/GetEmployeeList',
                type: 'POST',
                dataType: 'json',
                data: { facilityId: facilityId },
                success: function (result) {

                    alert(JSON.stringify(result));
                    var grid = $('#Employees').getKendoGrid();
                    grid.dataSource.data(result);
                    grid.refresh();
                },
                error: function () {
                    alert('error');
                }
            });
        
    }
</script>

<script>
    function onChange(e)
    {
       
        var facilityId = $("#required").data("kendoMultiSelect").value();
        
        alert(facilityId)
        
     
        $.ajax({
            url: '/Sample/GetEmployeeList',
            type: 'POST',
            dataType: 'json',
            data: {
                facilityId: facilityId
            },
            success: function (result) {
                var grid = $('#Employees').getKendoGrid();
                $('#Employees').data("kendoGrid").dataSource.data([])
                alert(JSON.stringify(result));
            

                grid.dataSource.data(result);
               
                grid.dataSource.refresh();
                if ($('#Employees').data("kendoGrid").dataSource.data().length == 0) {

                    grid.dataSource.data([]);

                }
                grid.data('kendoGrid').refresh();
                        
            },
            error: function () {
                alert('error');
            }
        });


    }

</script>
<div id="grid">
    

    @(Html.Kendo().Grid<KendoApp.Models.Employee>()
            .Name("Employees")
            .ToolBar(tb => tb.Create())
            .Pageable()
            .AutoBind(true)
            // .NoRecords()
            .DataSource(dataSource => dataSource.Ajax()
            .Model(model => model.Id(c => c.EmployeeId))
            //  .Read("GetEmployeeList", "Sample")
            .Update("UpdateEmployee", "Sample")
            .Create("InsertEmployee", "Sample")
            .Destroy("DeleteEmployee", "Sample")
            )
            .Columns(cols =>
            {
                cols.Bound(c => c.EmployeeName).Width(300);
                cols.Bound(c => c.EmployeeAddress);
                cols.Bound(c => c.EmployeeDesignation);
                cols.Bound(c => c.FacilityId);
    //cols.ForeignKey(c => c.FacilityId,(System.Collections.IEnumerable)ViewData["Facilities"], "Facility_ID", "Facility_Name")
    // .Title("Facility_Name")
    //.ClientTemplate("#=FacilityName#");
    //cols.Bound(p => p.FacilityId)
    //      .ClientTemplate("#=FacilityName#")
    //    .EditorTemplateName("FacilityRemoteData");
    cols.Command(cmd =>
                {
                    cmd.Edit();
                    cmd.Destroy();
                });
            })
    )

</div>

<select id="ddlselect"></select>
<script id="template" type="text/x-kendo-template">
    <span class="#: Facility_status ? 'k-state-disabled': ''#">
        #: Facility_Name #
    </span>
</script>


